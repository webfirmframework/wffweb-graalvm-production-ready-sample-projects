<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.example</groupId>
	<version>0.0.1-SNAPSHOT</version>
	<artifactId>wffwebappdemo</artifactId>
	<packaging>jar</packaging>

	<properties>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>23</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<tomcat.version>11.0.2</tomcat.version>
		<mainClass>com.webfirmframework.web.launcher.Main</mainClass>
		<imageName>minimalproductionsample</imageName>
		<native.maven.plugin.version>0.10.4</native.maven.plugin.version>
	</properties>

	<repositories>
		<repository>
			<id>snapshots-repo</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.webfirmframework</groupId>
			<artifactId>wffweb</artifactId>
			<version>12.0.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-websocket</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-el</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jsp-api</artifactId>
			<version>${tomcat.version}</version>
		</dependency>
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>4.4.0</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>${imageName}</finalName>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>2.1.0</version>
				<configuration>
					<extraJvmArguments>-server</extraJvmArguments>
					<assembleDirectory>target</assembleDirectory>
					<programs>
						<program>
							<mainClass>${mainClass}</mainClass>
							<id>webapp</id>
						</program>
					</programs>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgs>--enable-preview</compilerArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>native</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native.maven.plugin.version}</version>
						<extensions>false</extensions>
						<executions>
							<execution>
								<id>build-native</id>
								<goals>
									<goal>compile-no-fork</goal>
								</goals>
								<phase>package</phase>
							</execution>
							<!--<execution>
								<id>test-native</id>
								<goals>
									<goal>test</goal>
								</goals>
								<phase>test</phase>
							</execution>-->
						</executions>
						<configuration>
							<skip>false</skip>
							<fallback>false</fallback>
							<imageName>${imageName}</imageName>
							<buildArgs>
								<arg>--no-fallback</arg>
								<arg>--enable-url-protocols=jrt,http,https,ws,wss</arg>
								<arg>-H:DashboardDump=wffwebdashboarddump</arg>
								<arg>-H:+DashboardAll</arg>
								<arg>--enable-http</arg>
								<arg>--enable-https</arg>
								<arg>-H:ConfigurationFileDirectories=${project.build.directory}/../graalvm_resources/META-INF/com.webfirmframework/wffwebappdemo/native-image</arg>
								<arg>-H:+AddAllCharsets</arg>
								<arg>--features=com.webfirmframework.web.launcher.GraalVMRuntimeReflectionRegistrationFeature</arg>
								<arg>-J-Xmx4g</arg>
								<!--configure-reflection-metadata and enable-all-security-services are deprecated, might be removed in future version-->
							</buildArgs>
							<agent>
								<enabled>true</enabled>
								<options>
									<option>experimental-class-loader-support</option>
								</options>
							</agent>

							<classpath>${project.build.directory}/${imageName}.jar</classpath>
							<classpath/>
							<metadataRepository>
								<enabled>true</enabled>
							</metadataRepository>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>3.5.0</version>
						<executions>
							<execution>
								<id>java-agent</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>java</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
									<arguments>
										<argument>-agentlib:native-image-agent=config-merge-dir=${project.build.directory}/../graalvm_resources/META-INF/com.webfirmframework/wffwebappdemo/native-image</argument>
										<argument>-classpath</argument>
										<classpath/>
										<argument>${mainClass}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>native</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${project.build.directory}/${imageName}</executable>
									<workingDirectory>${project.build.directory}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
